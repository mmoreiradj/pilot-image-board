name: Pull Request

on:
  pull_request:

jobs:
  qa:
    name: Quality Assurance
    strategy:
      matrix:
        working-directory: [back, front]
    uses: mmoreiradj/pilot-image-board/.github/workflows/run-checks.yaml@main
    with:
      working-directory: ${{ matrix.working-directory }}

  sync-app:
    name: Sync App
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    needs: [qa]
    outputs:
      frontend-url: ${{ steps.tf-apply.outputs.frontend-url }}
    env:
      PR_NUMBER: ${{ github.event.pull_request.number }}
      COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
      GITHUB_REPOSITORY: ${{ github.repository }}
      EPHEMERAL_TF_BACKEND: ${{ secrets.EPHEMERAL_TF_BACKEND }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
      - name: Terraform Backend
        working-directory: ./.infra/terraform
        run: |
          echo "$EPHEMERAL_TF_BACKEND" > /tmp/backend.tf
          echo "key = \"kubernetes/apps/${{ github.repository }}/ephemeral/pr-$PR_NUMBER/terraform.tfstate\"" >> /tmp/backend.tf
          chmod 200 /tmp/backend.tf
      - name: Setup Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"
      - name: Setup Kubeconfig
        run: |
          echo "$KUBECONFIG" > /tmp/kubeconfig
          chmod 600 /tmp/kubeconfig
      - name: Terraform Init
        working-directory: ./.infra/terraform/ephemeral
        run: terraform init -backend-config=/tmp/backend.tf
      - name: Terraform Apply
        working-directory: ./.infra/terraform/ephemeral
        id: tf-apply
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | sed 's/.*\///g')
          NAMESPACE=$(echo $REPO_NAME | sed 's/\//-/g')-pr-$PR_NUMBER
          terraform apply \
            -auto-approve \
            -var "vault_token=$VAULT_TOKEN" \
            -var "vault_address=$VAULT_ADDR" \
            -var "namespace=$NAMESPACE" \
            -var "image_tags=$COMMIT_SHA" \
            -var "charts_target_revision=${{ github.head_ref }}" \
            -var "kube_config_path=/tmp/kubeconfig"
          echo "frontend-url=https://$NAMESPACE.do.moreiradj.net" >> $GITHUB_OUTPUT

  build:
    needs: [qa]
    name: Build
    uses: mmoreiradj/pilot-image-board/.github/workflows/build-all-images.yaml@main
    permissions:
      packages: write

  # Tells the user that the images were built successfully
  comment:
    permissions:
      pull-requests: write
    name: Output Built Images
    runs-on: ubuntu-latest
    needs:
      - build
      - sync-app
    steps:
      - name: Comment Pull Request
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            :rocket: The images were built successfully!

            :white_check_mark: Frontend image: `docker pull ghcr.io/${{ github.repository }}-front:${{ github.event.pull_request.head.sha }}`
            :white_check_mark: Backend image: `docker pull ghcr.io/${{ github.repository }}-back:${{ github.event.pull_request.head.sha }}`
            :white_check_mark: Backend migration image: `docker pull ghcr.io/${{ github.repository }}-back-migration:${{ github.event.pull_request.head.sha }}`

            :eyes: You can access the frontend at [here](${{ needs.sync-app.outputs.frontend-url }}) (it may take a few minutes to be available)

            :robot: This comment is automatically generated by a GitHub Actions workflow.
