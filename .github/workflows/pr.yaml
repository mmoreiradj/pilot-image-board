name: Pull Request

on:
  pull_request:

jobs:
  qa:
    name: Quality Assurance
    strategy:
      matrix:
        working-directory: [back, front]
    uses: mmoreiradj/pilot-image-board/.github/workflows/run-checks.yaml@main
    with:
      working-directory: ${{ matrix.working-directory }}

  sonar:
    name: Run SonarQube Analysis
    runs-on: ubuntu-latest
    needs: [qa]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  sync-app:
    concurrency:
      group: ephemeral-${{ github.event.pull_request.number }}
    name: Sync App
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    needs: [sonar]
    outputs:
      frontend-url: ${{ steps.tf-apply.outputs.frontend-url }}
    env:
      PR_NUMBER: ${{ github.event.pull_request.number }}
      COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
      GITHUB_REPOSITORY: ${{ github.repository }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"
      - name: Setup Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" > "${{ runner.temp }}/kubeconfig"
          chmod 400 "${{ runner.temp }}/kubeconfig"
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
      - name: Terraform Init
        working-directory: .infra/terraform/ephemeral
        run: |
          terraform init \
            -input=false \
            -backend-config="bucket=${{ secrets.S3_BUCKET }}" \
            -backend-config="access_key=${{ secrets.S3_ACCESS_KEY }}" \
            -backend-config="secret_key=${{ secrets.S3_SECRET_KEY }}" \
            -backend-config="region=${{ secrets.S3_REGION }}" \
            -backend-config="key=kubernetes/apps/${{ env.GITHUB_REPOSITORY }}/ephemeral/pr-${{ env.PR_NUMBER }}/terraform.tfstate" \
            -backend-config='endpoints={"s3": "${{ secrets.S3_ENDPOINT }}"}'
      - name: Terraform Apply
        working-directory: ./.infra/terraform/ephemeral
        id: tf-apply
        run: |
          REPO_NAME=$(echo "$GITHUB_REPOSITORY" | sed 's/.*\///g')
          NAMESPACE=$(echo "$REPO_NAME" | sed 's/\//-/g')-pr-"$PR_NUMBER"
          terraform apply \
            -auto-approve \
            -var "vault_token=${{ secrets.VAULT_TOKEN }}" \
            -var "vault_address=${{ secrets.VAULT_ADDRESS }}" \
            -var "namespace=$NAMESPACE" \
            -var "image_tags=$COMMIT_SHA" \
            -var "charts_target_revision=${{ github.head_ref }}" \
            -var "kube_config_path=${{ runner.temp }}/kubeconfig"
          echo "frontend-url=https://$NAMESPACE.do.moreiradj.net" >> $GITHUB_OUTPUT

  build:
    needs: [sonar]
    name: Build
    uses: mmoreiradj/pilot-image-board/.github/workflows/build-all-images.yaml@main
    permissions:
      packages: write

  # Tells the user that the images were built successfully
  comment:
    permissions:
      pull-requests: write
    name: Output Built Images
    runs-on: ubuntu-latest
    needs:
      - build
      - sync-app
    steps:
      - name: Comment Pull Request
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            :rocket: The images were built successfully!

            :white_check_mark: Frontend image: `docker pull ghcr.io/${{ github.repository }}-front:${{ github.event.pull_request.head.sha }}`
            :white_check_mark: Backend image: `docker pull ghcr.io/${{ github.repository }}-back:${{ github.event.pull_request.head.sha }}`
            :white_check_mark: Backend migration image: `docker pull ghcr.io/${{ github.repository }}-back-migration:${{ github.event.pull_request.head.sha }}`

            :eyes: You can access the frontend [here](${{ needs.sync-app.outputs.frontend-url }}) (it may take a few minutes to be available)

            :robot: This comment is automatically generated by a GitHub Actions workflow.
